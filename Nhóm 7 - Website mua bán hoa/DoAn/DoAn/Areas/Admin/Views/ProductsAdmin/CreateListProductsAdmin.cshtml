@model DoAn.Models.Hoa

@{
    ViewBag.Title = "CreateListProductsAdmin";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    input {
        width: 100%;
        padding: 12px;
        border-radius: 5px;
    }

    .col-6 {
        padding-left: 7rem;
    }
</style>

<h2 class="text-center">Create Product</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)

        <div class="row">
            <div class="col-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.TenSanPham, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TenSanPham)
                        @Html.ValidationMessageFor(model => model.TenSanPham)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HinhAnh, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HinhAnh)
                        @Html.ValidationMessageFor(model => model.HinhAnh)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MoTa, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MoTa)
                        @Html.ValidationMessageFor(model => model.MoTa)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gia, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Gia)
                        @Html.ValidationMessageFor(model => model.Gia)
                    </div>
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.DonVi, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DonVi)
                        @Html.ValidationMessageFor(model => model.DonVi)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SoLuong, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SoLuong, new { htmlAttributes = new { @type = "number", @min = "1" } })
                        @Html.ValidationMessageFor(model => model.SoLuong)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HanSuDung, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.HanSuDung, new { type = "date" })
                        @Html.ValidationMessageFor(model => model.HanSuDung)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MaLoai, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MaLoai, new { htmlAttributes = new { @type = "number", @min = "1", @max ="5" } })
                        @Html.ValidationMessageFor(model => model.MaLoai)
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group mt-xl-5">
            @Html.ActionLink("Back to List", "ListProductsAdmin", null, new { @class = "btn btn-secondary mr-3" })
            <input type="submit" value="Create" class="btn btn-success" style="width:auto" />
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        $('input[name="MaLoai"]').on('input', function () {
            var min = 1;
            var max = 5;
            var value = parseInt(this.value);

            if (value < min) {
                this.value = min; // Nếu giá trị nhỏ hơn 1, đặt lại thành 1
            } else if (value > max) {
                this.value = max; // Nếu giá trị lớn hơn 5, đặt lại thành 5
            }
        });
    });
    $(document).ready(function () {
        $('input[name="SoLuong"]').on('input', function () {
            var min = 1;
            var value = parseInt(this.value);

            if (value < min) {
                this.value = min; // Nếu giá trị nhỏ hơn 1, đặt lại thành 1
            }
        });
    });

</script>